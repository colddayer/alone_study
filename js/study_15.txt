        给定一个元素获取他相对于视窗的坐标
计算视口坐标就相对简单了很多，可以通过调用元素的getBoundingClientRect方法。
方法返回一个有left、right、top、bottom属性的对象，分别表示元素四个位置的相对于视口的坐标。
getBoundingClientRect所返回的坐标包含元素的内边距和边框，不包含外边距。兼容性很好，非常好用


        实现图片的懒加载
1.给图片src设为空，把url设在data-属性里，单离视口位置底部 > 0 ,
顶部 < 视口高度，将data属性的url赋值给src，清空data，
添加滚动监听


        正则表达式函数怎么用
+ 号代表前面的字符必须至少出现一次（1次或多次）
* 号代表字符可以不出现，也可以出现一次或者多次（0次、或1次、或多次）
? 问号代表前面的字符最多只可以出现一次（0次、或1次）
$ 匹配输入字符串的结尾位置
() 标记一个子表达式的开始和结束位置
. 匹配除换行符 \n 之外的任何单字符
[ 标记一个中括号表达式的开始
{ 标记限定符表达式的开始
| 指明两项之间的一个选择


        深拷贝
如何区分深拷贝与浅拷贝，简单点来说，就是假设B复制了A，当修改A时，看B是否会发生变化，
如果B也跟着变了，说明这是浅拷贝，拿人手短，如果B没变，那就是深拷贝，自食其力

JSON.stringfy()和JSON.parse()即可搞定。但是这种简单粗暴的方法有其局限性。
当值为undefined、function、symbol 会在转换过程中被忽略


        编写一个通用事件监听函数
        